name: Production Release Actions

on:
  release:
      types:
        - published

jobs:

  deploy-flows:
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'write'
      id-token: 'write'

    runs-on: ubuntu-latest
    env:
      GCS_BUCKET: inm-data-prefect-flows

    steps:
      - name: checkout ${{ github.event.release.tag_name }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name }}

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: latest
          ref: ${{ github.event.release.tag_name }}
          # Enable listing of files matching each filter.
          # Paths to files will be available in `${FILTER_NAME}_files` output variable.
          # Paths will be escaped and space-delimited.
          # Output is usable as command-line argument list in Linux shell
          list-files: shell
          filters: |
            block:
              - added|modified: 'flows/blocks/*.py'
            deployment:
              - added|modified: 'flows/**/prefect.yaml'
            legacy_deployment:
              - added|modified: 'deployments/**/*.yaml'
              - added|modified: 'flows/**/deployments/*.yaml'

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11 #install the python needed

      - name: install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Authenticate against Google Cloud
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          create_credentials_file: true
          workload_identity_provider: projects/221505833041/locations/global/workloadIdentityPools/default/providers/github
          service_account: managed-project@inm-seed.iam.gserviceaccount.com

      - name: 'upload files to inm-data-prefect-flows'
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: '.'
          destination: 'inm-data-prefect-flows'

      - name: 'upload files to inm-aws-prefect-flows'
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: '.'
          destination: 'inm-aws-prefect-flows'

      - name: Authenticate against Prefect Cloud 'Production DET' workspace
        run: prefect cloud login --key ${{ secrets.PREFECT_CLOUD_PRODUCTION_USER }} --workspace 'inmarsat/production-det'

      - name: Register Prefect blocks
        if: ${{ steps.filter.outputs.block == 'true' }}
        run: |
          for block in ${{ steps.filter.outputs.block_files }}; do
            echo "prefect block register --file $block"
            prefect block register --file $block
          done

      - name: Apply Prefect deployments
        if: ${{ steps.filter.outputs.deployment == 'true' }}
        run: |
          for deployment in ${{ steps.filter.outputs.deployment_files }}; do
            echo "prefect --no-prompt deploy --prefect-file $deployment --all"
            prefect --no-prompt deploy --prefect-file $deployment --all
          done

      - name: Apply Prefect Legacy deployments
        if: ${{ steps.filter.outputs.legacy_deployment == 'true' }}
        run: |
          for deployment in ${{ steps.filter.outputs.legacy_deployment_files }}; do
            echo "prefect --no-prompt deployment apply $deployment"
            prefect --no-prompt deployment apply $deployment
          done

      - name: Create OR Replace "latest" tag.
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git tag -fa "latest" -m "Latest and Greatest"
          git push origin tag latest --force
